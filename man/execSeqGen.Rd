\name{execSeqGen}
\alias{execSeqGen}
\title{Execute seq-gen}
\usage{
execSeqGen(params, nreps, model = "GTR", ngamma = 4, seed = "10101",
  outputFormat = c("relaxed", "phylip", "nexus"),
  pathSimData = "simDataGrouped")
}
\arguments{
  \item{params}{The list of parameters generates by
  \code{\link{getParams}}}

  \item{nreps}{Number of replicated alignments to generate}

  \item{model}{Model of molecular evolution used to
  generate the data (for now only \sQuote{GTR} is
  supported)}

  \item{ngamma}{Number of categories for the alpha
  parameter of the Gamma distribution (RAxML always uses 4,
  so you should probably leave it as the default value of
  4).}

  \item{seed}{Seed number to generate the alignment}

  \item{outputFormat}{Format file of the alignment
  generated by seq-gen, if you intend to use RAxML to
  estimate your trees, keep the default
  (\sQuote{relaxed)}.}

  \item{pathRaxml}{Where the RAxML_info files for each
  partition are currently stored (default
  \sQuote{partitionOptimization}).}

  \item{pathSimData}{Where the output files will be stored
  (default \sQuote{simDataGrouped})}
}
\value{
TRUE, but really is used for its side effect of generating
random sequences stored in files.
}
\description{
Generate sequences with seq-gen using parameters from the
RAxML run
}
\details{
Currently, \code{seq-gen} uses a proportion of invariant
sites depending on whether the list of parameters in the
\code{params} object is empty or not.
}
\author{
Francois Michonneau
}

