
##' .. content for \description{} (no empty lines) ..
##'
##' .. content for \details{} ..
##' @title 
##' @param infoFile 
##' @return 
##' @author Francois Michonneau
getParams <- function(infoFile) {
    f <- scan(infoFile, what="character", sep="\n")

    alpha <- grep("^alpha: ", f, value=TRUE)
    invar <- grep("^invar: ", f, value=TRUE)
    rateAC <- grep("^rate A <-> C: ", f, value=TRUE)
    rateAG <- grep("^rate A <-> G: ", f, value=TRUE)
    rateAT <- grep("^rate A <-> T: ", f, value=TRUE)
    rateCG <- grep("^rate C <-> G: ", f, value=TRUE)
    rateCT <- grep("^rate C <-> T: ", f, value=TRUE)
    rateGT <- grep("^rate G <-> T: ", f, value=TRUE)
    freqA <- grep("^freq pi\\(A\\):", f, value=TRUE)
    freqC <- grep("^freq pi\\(C\\):", f, value=TRUE)
    freqG <- grep("^freq pi\\(G\\):", f, value=TRUE)
    freqT <- grep("^freq pi\\(T\\):", f, value=TRUE)
    treePath <-  grep("Final tree written to: ", f, value=TRUE)
    nameAlg <- grep("-s\\s+(.+\\.phy)", f, value=TRUE)
    nameAlg <- gsub(".+-s\\s(.+\\phy)\\s+.+", "\\1", nameAlg)
    fileNm <- infoFile
    
    res <- list(alpha=alpha, invar=invar,
                rateAC=rateAC, rateAG=rateAG, rateAT=rateAT,
                rateCG=rateCG, rateCT=rateCT, rateGT=rateGT,
                freqA=freqA, freqC=freqC, freqG=freqG, freqT=freqT,
                nameAlg=nameAlg, treePath=treePath, fileNm=fileNm)
    res <- lapply(res, function(x) {
        gsub("(.+)\\s(.+)", "\\2", x)
    })

    algFile <- scan(what="character", file=res$nameAlg, n=1, sep="\n")
    seqlen <- unlist(strsplit(algFile, " "))[2]
    res$seqlen <- seqlen
    
    res
}

